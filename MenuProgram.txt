START

    MAIN:

        ARRAY serNames OF LENGTH [3] <-- ["Drive to survive, season 4", "Inventing Anna", "Bridgerton, season 2"]
        ARRAY dtsS4 OF LENGTH [10]
        ARRAY invAnn OF LENGTH [9]
        ARRAY bridS2 OF LENGTH [8]

        OUTPUT "Welcome to the Netflix episode analyser, please input current viewer count data: "

        dataEntryLoop ("Please enter the view count per episode for drive to survive, season 4: ", dtsS4)
        dataEntryLoop ("Please enter the view count per episode for Inventing Anna: ", invAnn)
        dataEntryLoop ("Please enter the view count per episode for Bridgerton, season 2: ", bridS2)
        OUTPUT "Data Entry Completed"

        run <-- TRUE

        DO
            OUTPUT "> 1. Display average view count for each series season.
                    > 2. Display episode from all series with the highest view count.
                    > 3. Display the most popular series.
                    > 4. Display show with largest season finale audience with view count.
                    > 5. Exit the program."

            p <-- ASK USER "Your choice: "

            IF p = 1 THEN
                x <-- AverageOfArray(dtsS4)
                y <-- AverageOfArray(invAnn)
                z <-- AverageOfArray(bridS2)

                OUTPUT "Drive to survive, season 4: " a
                OUTPUT "Inventing Anna: " b
                OUTPUT "Bridgerton, season 2: " c
            ELSE IF p = 2 THEN
                a <-- IdentifyMaxValueOfArray(dtsS4)
                b <-- IdentifyMaxValueOfArray(invAnn)
                c <-- IdentifyMaxValueOfArray(bridS2)

                OUTPUT "Drive to survive, season 4's most viewed episode is " (a + 1) " with " dtsS4[a] " views."
                OUTPUT "Inventing Anna's most viewed episode is " (b + 1) " with " invAnn[b] " views."
                OUTPUT "Bridgerton, season 2's most viewed episode is " (c + 1) " with " bridS2[c] " views."
            ELSE IF p = 3 THEN
                a <-- CalcTotal(dtsS4)
                b <-- CalcTotal(invAnn)
                c <-- CalcTotal(bridS2)
                    
                ARRAY totals OF LENGTH [3] <-- [a, b, c]
                d <-- IdentifyMaxValueOfArray(totals)

                OUTPUT serNames[d] " has the highest pupularity with " totals[d] " views."
            ELSE IF p = 4 THEN
                ARRAY finaleViews[dtsS4[LENGTH OF dtsS4 -1], invAnn[LENGTH OF invAnn -1], bridS2[LENGTH OF bridS2 -1]]

                a <-- IdentifyMaxValueOfArray(finaleViews)
                OUTPUT serNames[a] " has the most popular finale episode with: " finaleViews[a] " views."
            ELSE IF p = 5 THEN
                OUTPUT "Goodbye."
                run <-- FALSE
            ELSE THEN
                OUTPUT "Input is an invalid menu ID, please try again: "
            END IF
        WHILE run = TRUE

    END MAIN

    dataEntryLoop: PARAMETERS(ouput, array)

        OUTPUT output

        FOR e <-- 0 TO (LENGTH OF array) INCREASE BY 1
            a <-- ASK USER: "Episode " (e + 1) ": "
            IF 0 <= a < 100000 THEN
                a <-- 1
            ELSE IF a >= 100 000 THEN
                DO NOTHING
            ELSE THEN
                OUTPUT "This system does not allow input values of less than 0, please try again"
            END IF
            array[e] = a
        END FOR

        OUTPUT "____________________________________________________________"

    END dataEntryLoop

    AverageOfArray: PARAMETERS (array)

        a <-- CalcTotal(array)
        b <-- a / (LENGTH OF array)

        RETURN b

    END AverageOfArray

    IdentifyMaxValueOfArray: PARAMETERS (array)

        a <-- 0
        FOR i <-- 0 TO LENGTH OF array INCREASE BY 1
            IF array[i] > a
                a <-- array[i]
                b <-- i
            END IF
        END FOR

        RETURN b

    END MaxValueOfArray

    CalcTotal: PARAMETERS (array)

        FOR i <-- 0 TO LENGTH OF array INCREASE BY 1
            a <-- a + array[i]
        END FOR

        RETURN a

    END CalcTotal

END